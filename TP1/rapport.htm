<html>
<head>
    <title>IFT3911 DM1</title>
    <style type="text/css">
        table
        {
            border: outset 2px black;
            border-collapse: collapse;
        }
        th
        {
            border-bottom: double 2px black;
        }
        td
        {
            border-bottom: solid 1px black;
        }
        .first_col
        {
            border-right: double 2px black;
        }
    </style>
</head>
<body>
    <h1 style="text-align: center;">
        IFT 3911 - Devoir 1</h1>
    <h2>
        Information générale</h2>
    <p>
        <span style="font-weight: bold;">Nom: </span>Camille Divisia
        <br />
        <span style="font-weight: bold;">Matricule: </span>9289
        <br />
        <span style="font-weight: bold;">Courriel: </span>camille.divisia@umontreal.ca
        <br />
        <span style="font-weight: bold;">temps mis: </span> 28 heures
    </p>
    <p>
        <span style="font-weight: bold;">Nom: </span>Hanz Schepens
        <br />
        <span style="font-weight: bold;">Matricule: </span>9679
        <br />
        <span style="font-weight: bold;">Courriel: </span>hanz.schepens@umontreal.ca
        <br />
        <span style="font-weight: bold;">temps mis: </span>28h
    </p>
    <p>
        <span style="font-weight: bold;">Nom: </span>Bassel
        <br />
        <span style="font-weight: bold;">Matricule: </span>2972
        <br />
        <span style="font-weight: bold;">Courriel: </span>Bassel.assi@umontreal.ca
        <br />
        <span style="font-weight: bold;">temps mis: </span>28 heures
    </p>
    <h2>
        Distribution des tâches</h2>
    <p>
        <span style="font-weight: bold;">Soumetteur: </span> Camille Divisia
    </p>
    <table cellpadding="7px">
        <thead>
            <tr>
                <th class="first_col">
                    Tâche
                </th>
                <th>
                    Camille
                </th>
                <th>
                    Hanz
                </th>
                <th>
                    Bassel
                </th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td class="first_col">
                    Diagramme de classe conceptuel
                </td>
                <td>
                    Entités (10%)
                </td>
                <td>
                    Associations, abstraction (85%)
                </td>
                <td>
                    Vérification (5%)
                </td>
            </tr>
            <tr>
                <td class="first_col">
                    Diagramme de séquences système
                </td>
                <td>
                    CU et scenarios Bateaux et trains (90%)
                </td>
                <td>
                    Vérification (20%)
                </td>
                <td>
                    Avions (90%)
                </td>
            </tr>
            <tr>
                <td class="first_col">
                    Hypothèses
                </td>
                <td>
                    OCL (10%)
                </td>
                <td>
                    Diagramme de classe conceptuel/design (85%)
                </td>
                <td>
                    Vérification (5%)
                </td>
            </tr>
            <tr>
                <td class="first_col">
                    Diagramme de classe design
                </td>
                <td>
                    Entités (10%)
                </td>
                <td>
                    Attributs, associations, méthodes (85%)
                </td>
                <td>
                    Vérification (5%)
                </td>
            </tr>
			<tr>
                <td class="first_col">
                    Diagramme de paquets
                </td>
                <td>
                    Vérification (5%)
                </td>
                <td>
                    Paquetage (90%)
                </td>
                <td>
                    Vérification (5%)
                </td>
            </tr>
            <tr>
                <td class="first_col">
                    Diagramme de sequence
                </td>
                <td>
                    Verifier les vols/trajets/itineraires (100%)
                </td>
                <td>
                    Reserver un siege (100%)
                </td>
                <td>
                    Payer un siege (100%)
                </td>
            </tr>
            <tr>
                <td class="first_col">
                    OCL
                </td>
                <td>
                    Tous les OCLs demandes (90%)
                </td>
                <td>
                    Vérification (5%)
                </td>
                <td>
                    Vérification (5%)
                </td>
            </tr>
            <tr>
                <td class="first_col">
                    Justifications
                </td>
                <td>
                    Vérification (5%)
                </td>
                <td>
                    Redaction (90%)
                </td>
                <td>
                    Vérification (5%)
                </td>
            </tr>
            <tr>
                <td class="first_col">
                    Redaction du rapport
                </td>
                <td>
                    Le reste (45%)
                </td>
                <td>
                    Justification et Hypothèses (45%)
                </td>
                <td>
                    Vérification (10%)
                </td>
            </tr>
        </tbody>
    </table>
    <h2>
        Hypothèses</h2>
    <p>
        <ul>
            <li>
                <b>OCL</b> : En ce qui concerne le ID des destinations, il y avait de la confusion sur les 3 lettres uniques. 
                Nous ne savions pas si les caractères qui se répètent (i.e. YYZ) étaient autorisé.
                Nous avons alors supposé qu'il faut seulement que la chaîne de caractère au complet soit unique, car il existe de vrais aéroports avec des lettres qui se répètent.
            </li>
			<li>
			<b>Diagramme de classe conceptuel</b> :
				<ul>
					<li>
					Pour commencer, nous avons supposé que nous devions inscrire toutes les classes abstraites dans ce diagramme.
					La raison est qu'il est important de modéliser les classes abstraites dans ce diagramme, pour plus facilement le traduire lors du diagramme de classe.
					</li>
					<li>
					Ensuite, nous avons assumé que nous devions inscrire le stricte minimum pour les attributs dans ce diagramme, car le but est de simplement représenter le système dans son ensemble.
					Donc, nous n'avons pas inclu les classes de contrôle, car elles ne font pas parti de la spécification du problème.
					</li>
					<li>
					Pour terminer, nous avons aussi supposé que le type de section pourrait être représenter par une énumération. 
					Nous ne l'avons pas inclus dans ce diagramme, car la manière dont nous l'avons implémenté n'est pas spécifique au domaine, donc nous avons laissé tout simplement "sectionType" pour représenter les énumérations.
					</li>
					
				</ul>
				<li>
				<b>Diagramme de classe</b> :
					<ul>
						<li>
						La première hypothèse que nous avons fait est que nous avions besoin d'un endroit pour stocker toutes les informations,
						donc nous avons créé une classe singleton (DatabaseConnector) qui s'occupe de la connection vers la base de données. 
						Ceci est dû au fait que certaines opérations des controlleurs nécéssite des informations sur les entitées du système
						qui ne sont pas vraiment stocké à un seul endroit spécifique.
						</li>
						<li>
						Ensuite, nous avons assumé que nous n'avions pas besoin de faire d'interface pour l'utilisateur dans notre modèle,
						car il n'y a aucune description de celle-ci dans le texte fourni.
						</li>
						<li>
						Nous avons aussi assumé qu'il n'y avait que 2 points d'entrées dans notre système, donc nous n'avons fait que 2 controlleurs.
						</li>
						<li>
						Pour la classe de paiements, nous avons créé  une interface, car nous faisons l'hypothèse que l'application pourrait changer 
						de système de paiement à tout moment, et donc nous n'avons qu'à remplacer 1 classe et tout le reste fonctionne.
						</li>
						<li>
						Pour les énumérations, nous n'étions pas certain si nous pouvions faire de l'abstraction, donc nous n'en avons pas fais et cela nous a forcé à faire 2 types d'énumération différent.
						Un pour les bateaux et l'autre pour les avions et les trains. 
						</li>
						<li>
						Nous avons aussi assumé que les engins de voyage qui nécéssite un nombre minimum de sections (i.e. Tous les bateaux ont toutes les sections) seront créé ainsi dans le code.
						Donc nous ne l'avons pas modélisé dans le diagramme, car c'est une contrainte qui sera respecté au niveau du code.
						</li>
						<li>
						Pour terminer, nous avons généré du code pour faire certains diagramme de séquence, donc il y a quelques entités qui ont des attributs qui ont été modifié par Visual Paradigm.
						Nous avons décidé de ne pas y toucher, car le système à généré les bonnes choses, malgré qu'on dirait que certains attributs n'ont pas les bonnes déclarations
						(i.e. Train :: seats : TrainSeat lorsque cela devrait être une List de TrainSeat).
						L'hypothèse est donc que Visual Paradigm à traduit ce que nous avions fait correctement et que les modifications qu'il à fait à notre diagramme de classe sont bons.
						</li>
					
					</ul>
				</li>
			</li>
        </ul>
    </p>
    <h2>
        Diagramme de classe conceptuel</h2>
    <p>
        Voici notre solution pour le diagramme de classe conceptuel
    </p>
    <ul>
        <li>Voici un <a href="Domaine/">lien</a> vers les fichiers.</li>
    </ul>
    <img src="Domaine/conceptual_class_diagram.jpg"
         alt="diagramme de classe  conceptuel" />
    <h2>
        Diagramme de séquence système</h2>
    <p>
        Pour mieux comprendre le domaine, nous avons établi la liste des cas d'utilisation.
        Pour les clients nous avons:
        <ul>
            <li>chercher les vols d’un aeroport d’origine a une destination avec des sieges libres, a une date donnee, pour une classe donnee. </li>
            <li>chercher les trajets d’un port d’origine a une destination avec des sieges libres, a une date donnee, pour une classe donnee. </li>
            <li>reserver un siege d’avion </li>
            <li>choisir aile ou fenetre</li>
            <li>reserver un siege de train</li>
            <li>payer un siege</li>
            <li>Chercher les trajets d’une gare d’origine a une destination avec des sieges libres, a une date donnee, pour une classe donnee. </li>
            <li>reserver une cabine</li>
            <li>payer une cabine</li>
        </ul>
        Pour le coté administratif nous avons:
        <ul>
            <li>creer un aeroport</li>
            <img src="Domaine/create_airport.jpg" alt="some image" />
            <li>modifier un aeroport    </li>
            <img src="Domaine/modify_airport.jpg" alt="some image" />                                        
            <li>supprimer un aeroport        </li> 
            <img src="Domaine/delete_airport.jpg" alt="some image" />                                  
            <li>creer une compagnie aérienne      </li> 
            <img src="Domaine/create_airline.jpg" alt="some image" />                                 
            <li>modifier une compagnie aérienne        </li> 
            <img src="Domaine/modify_airline.jpg" alt="some image" />                                    
            <li>supprimer une compagnie aérienne        </li>
            <img src="Domaine/delete_airline.jpg" alt="some image" />
            <li>creer un vol</li>
            <img src="Domaine/create_flight.jpg" alt="some image" />
            <li>modifier un vol</li>
            <img src="Domaine/modify_flight.jpg" alt="some image" />
            <li>supprimer un vol</li>
            <img src="Domaine/delete_flight.jpg" alt="some image" />
            <li>creer une section d’un avion</li>
            <img src="Domaine/create_plane_section.jpg" alt="some image" />
            <li>creer avion</li>
            <img src="Domaine/create_plane.jpg" alt="some image" />
            <li>creer rangee</li>
            <img src="Domaine/create_plane_row.jpg" alt="some image" />
            <li>creer colonne</li>
            <img src="Domaine/create_plane_column.jpg" alt="some image" />
            <li>creer siege [att: prix, type]</li>
            <img src="Domaine/create_plane_seat.jpg" alt="some image" />
            <li>consulter les details des vols d’un aeroport</li>
            <img src="Domaine/consult_flight.jpg" alt="some image" />
            <li>consulter les vols effectues par une compagnie aerienne</li>
            <img src="Domaine/search_flight.jpg" alt="some image" />
            <li>creer bateau</li>
            <img src="Domaine/createBoat.jpg" alt="some image" />
            <li>modifier bateau</li>
            <img src="Domaine/editBoat.jpg" alt="some image" />
            <li>supprimer bateau</li>
            <img src="Domaine/deleteBoat.jpg" alt="some image" />
            <li>creer un port</li>
            <img src="Domaine/createPort.jpg" alt="some image" />
            <li>modifier un port</li>
            <img src="Domaine/editPort.jpg" alt="some image" />
            <li>supprimer un port</li>
            <img src="Domaine/deletePort.jpg" alt="some image" />
            <li>creer un compagnie de croisiere</li>
            <img src="Domaine/createCruiseline.jpg" alt="some image" />
            <li>modifier un compagnie de croisiere</li>
            <img src="Domaine/editCruiseline.jpg" alt="some image" />
            <li>supprimer un compagnie de croisiere</li>
            <img src="Domaine/deleteCruiseline.jpg" alt="some image" />
            <li>creer un itineraire</li>
            <img src="Domaine/createBoatItinerary.jpg" alt="some image" />
            <li>modifier un itineraire</li>
            <img src="Domaine/editBoatItinerary.jpg" alt="some image" />
            <li>supprimer un itineraire</li>
            <img src="Domaine/deleteBoatItinerary.jpg" alt="some image" />
            <li>creer une section d’un bateau</li>
            <img src="Domaine/createBoatSection.jpg" alt="some image" />
            <li>modifier une section d'un bateau</li>
            <img src="Domaine/editBoatSection.jpg" alt="some image" />
            <li>modifier une section d'un bateau</li>
            <img src="Domaine/deleteBoatSection.jpg" alt="some image" />
            <li>creer cabine [att: prix, type]</li>
            <img src="Domaine/createCabin.jpg" alt="some image" />
            <li>modifier cabine [att: prix, type]</li>
            <img src="Domaine/editCabin.jpg" alt="some image" />
            <li>supprimer cabine [att: prix, type]</li>
            <img src="Domaine/deleteCabin.jpg" alt="some image" />
            <li>consulter les details des itineraires d’un port</li>
            <img src="Domaine/listAllCruisesByPort.jpg" alt="some image" />
            <li>consulter les itineraires effectues par une compagnie navale</li>
            <img src="Domaine/listAllCruisesByCruiseline.jpg" alt="some image" />
            <li>creer un gare</li>
            <img src="Domaine/createStation.jpg" alt="some image" />
            <li>modifier un gare</li>
            <img src="Domaine/editStation.jpg" alt="some image" />
            <li>supprimer un gare</li>
            <img src="Domaine/deleteStation.jpg" alt="some image" />
            <li>creer un compagnie ferroviaire</li>
            <img src="Domaine/createTrainline.jpg" alt="some image" />
            <li>modifier un compagnie ferroviaire</li>
            <img src="Domaine/editTrainline.jpg" alt="some image" />
            <li>supprimer un compagnie ferroviaire</li>
            <img src="Domaine/deleteTrainline.jpg" alt="some image" />
            <li>creer un trajet</li>
            <img src="Domaine/createTrainItinerary.jpg" alt="some image" />
            <li>modifier un trajet</li>
            <img src="Domaine/editTrainItinerary.jpg" alt="some image" />
            <li>supprimer un trajet</li>
            <img src="Domaine/deleteTrainItinerary.jpg" alt="some image" />
            <li>creer une section d’un train</li>
            <img src="Domaine/createTrainSection.jpg" alt="some image" />
            <li>modifier une section de train</li>
            <img src="Domaine/editTrainSection.jpg" alt="some image" />
            <li>supprimer une section de train</li>
            <img src="Domaine/deleteTrainSection.jpg" alt="some image" />
            <li>creer train</li>
            <img src="Domaine/createTrain.jpg" alt="some image" />
            <li>modifier train</li>
            <img src="Domaine/editTrain.jpg" alt="some image" />
            <li>supprimer train</li>
            <img src="Domaine/deleteTrain.jpg" alt="some image" />
            <li>creer siege [att: prix, type]</li>
            <img src="Domaine/createTrainSeat.jpg" alt="some image" />
            <li>modifier un siege [att: prix, type]</li>
            <img src="Domaine/editTrainSeat.jpg" alt="some image" />
            <li>supprimer un siege [att: prix, type]</li>
            <img src="Domaine/deleteTrainSeat.jpg" alt="some image" />
            <li>consulter les details des trajets d’une gare</li>
            <img src="Domaine/listAllTrainItineraryByStation.jpg" alt="some image" />
            <li>consulter les trajets effectues par une compagnie ferroviaire</li>
            <img src="Domaine/listAllTrainItineraryByTrainline.jpg" alt="some image" />
            <li>reserver une cabine</li>
            <img src="Domaine/reserveCabin.jpg" alt="some image" />
            <li>reserver un siege</li>
            <img src="Domaine/reserveSeat.jpg" alt="some image" />
            <li>payer une reservation</li>
            <img src="Domaine/payReservation.jpg" alt="some image" />

        </ul>

    </p>
    <ul>
        <li>Voici un <a href="Domaine/">lien</a> vers les fichiers (il y a ~70 diagrammes)</li>
    </ul>
    
    <h2>
        Diagramme de classe design</h2>
    <p>
        Voici ma solution pour le diagramme de classe design.
    </p>
    <ul>
        <li>Voici un <a href="Design/3911-TP1.vpp">lien</a> vers les fichiers.</li>
    </ul>
    <img src="Design/design_class_diagram.jpg"
        width="" alt="some image" />
    <h2>
        Diagramme de séquences</h2>
    
    <ul>
        <li>Voici un <a href="Design/">lien</a> vers les fichiers.</li>
    </ul>
    <p>Verifier les vols/Itineraires/Trajets</p>
    <img src="Design/getAllAvailableBoatItineraries.jpg"  alt="some image" />
    <img src="Design/getAllAvailableFlights.jpg"  alt="some image" />
    <img src="Design/getAllAvailableTrainItineraries.jpg"  alt="some image" />
    <p>Reserver un siege</p>
    <img src="Design/ClientController.reserveSeat(Client, Seat, Company).jpg" alt="some image" />
    <img src="Design/Seat.isReserved().jpg" alt="some image" />
    <p>Payer un siege</p>
    <img src="Design/pay_seat.jpg" alt="some image" />
    <h2>
        OCL</h2>
    <p>
        <pre>
            <code>
    #Un(e) gare/airport/port est identifiée par trois lettres uniques à chaque gare/airport/port [OCL]
    
    context Destination:
        inv:
            self.id.size() = 3
            self.id.AllInstances() -> forAll(d1,d2: Destination | d1<>d2 implies d1.destination<>d2.destination)
    
    #Un itinéraire ne peut pas durer plus de 21 jours [OCL]
    
    context BoatItinerary:
      inv: self.duration <= 21
    
    
    #L'aéroport de départ et d'arrivée d'un vol doit être différent [OCL].
    
    context Flight:
        inv: 
            self.airport -> forAll(departure,arrival: Airport | departure<>arrival implies departure.airport<>arrival.airport)
    
    #Le port de départ et d'arrivée doit être le même [OCL].
    
    context BoatItinerary:
        inv:
            self.port -> forAll(departure,arrival: Port | departure=arrival implies departure.port=arrival.port)
    
    #La partie alphabétique de l'ID d'un vol est unique à chaque compagnie et la partie numérique est unique à chaque vol au sein de la même compagnie [OCL]
    
    context Flight:
        let: airlineCodeAlpha = self.idCompany.substring(1,2) in 
        let: airlineCodeNum = self.idCompany.substring(3.self.idCompany.size()) in
        inv:
            Flight.allInstances() -> forAll((a1,a2: airlineCodeAlpha | a1 = a2 implies a1.airlineCodeAlpha = a2.airlineCodeAlpha) 
                            and (n1,n2 = airlineCodeNum | n1 <> n2 implies n1.airlineCodeNum <> n2.airlineCodeNum)
    
    #Un paquebot peut être assigné à plusieurs itinéraires tant qu'ils ne se chevauchent pas [OCL]. 
    
    context Boat:
        derive: numItinerary -> count(BoatItinerary)
        inv: numItinerary >= 0
        inv: self.itinerary -> forAll(d: departureDates a: arrivalDate | d <= a)
        
    
    #Toutes les cabines(sieges) d'une même section ont le même prix [OCL].
    
    context Section:
        inv: 
            self.seat.price -> forAll(price1,price2: Seat | price1=price2 implies price1.seat = price2.seat)
    
    #Un siège réservé devient assigné à un passager une fois payé: le siège est donc confirmé [OCL]
    
    context Reservation isPaid(): boolean
        pre: False
        post: True
    
    #Le client peut réserver un siège/cabine disponible dans un vol/trajet/itineraire donné [OCL]:
    
    context Client:: ReserveSeat(): boolean
        pre: False
        post: True
    
            </code>
        </pre>
       
    </p>
    <ul>
        <li>Si l'OCL ne s'affiche pas bien, voici un <a href="ocl_completed.txt">lien</a> vers le fichier contenant l'ensemble des OCL.</li>
        
    </ul>
    <h2>
        Diagramme de paquets</h2>
    
    <ul>
        <li>Voici un <a href="Design/">lien</a> vers les fichiers.</li>
    </ul>
    <img src="Design/package_diagram.jpg"
         alt="some image" />
    <h2>
        Justifications</h2>
    <p>
        Pour commencer, nous avons choisi de représenter les types de section (F.A.P.E) avec une énumération, 
		car il est facilement extensible si nous voulons rajouter de nouveaux types dans le futur.
		Nous avons fait une énumération pour les trains et les avions et un autre pour les bateaux, car les bateaux on des types différents.
		La raison principale pourquoi nous les avons séparés est que nous ne voulons pas qu'ils partagent un type en commun, 
		sinon cela pourrait causer des situations où un bateau a des sections d'avions. En faisant 2 énumérations différentes, nous évitons ce problème au complet.
		Advenant où nous devrions les mettres ensemble, il ne serait pas trop dur de fusionner les énumérations en 1 seule.
		</br>Pour continuer, nous avons décidé de faire de l'abstraction pour toutes les entités du système, car cela est beaucoup plus facile à maintenir et à réutiliser dans le futur.
		Nous avons extrait ce qui était commun de toutes les entités et nous avons créé des entités abstraites.
		</br>Nous avons décidé que les sections peuvent exister sans les engins de voyage, pour la simple raison que certains engins de voyage peuvent ne pas avoir de section.
		Ceci est donc la raison pourquoi nous n'avons pas de composition entre les avions et les sections par exemple. Le même raisonnement peut être utilisé pour les sièges,
		car les sièges peuvent être construits indépendamment des engins de voyage et interchangés entre les avions si nécéssaire.
		</br>En ce qui concerne les sièges, nous avons décidé que le concept de siège était équivalent à une place dans un voyage, donc nous avons fait en sorte que les cabines agissent comme des sièges.
		</br>Pour les sections, nous avons décidé de mettre les contraintes que les sections ne se répètent pas à l'intérieur du code, lors de l'association des sections aux engins de voyages.
		Nous voulions faire un OCL, mais le démonstrateur nous as dis de ne pas faire de contraintes OCL supplémentaires, donc nous suivons le conseil et le justifions ici.
		</br>Lors du paiement pour une réservation, on demande les informations du client, donc nous avons décidé que ces informations devraient être stocké dans l'objet du client aussi,
		car cela fait du sens que le client ait un compte dans le système. Sinon il serait difficile d'identifier (pour les humains) les clients qui se connectent au système pour réserver des sièges dans des voyages.
    </p>
    
</body>
</html>